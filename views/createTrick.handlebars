<form action="/addTrick" method="post" enctype="multipart/form-data" class="max-w-lg mx-auto p-6 bg-white shadow-md rounded-md">
    <div class="mb-4">
        <label for="name" class="block text-gray-700 font-bold mb-2">Name</label>
        <input type="text" id="name" name="name" required="true" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div class="mb-4">
        <label for="sudonames" class="block text-gray-700 font-bold mb-2">Other Names</label>
        <input type="text" id="sudonames" name="sudonames" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div class="mb-4">
        <label for="difficulty" class="block text-gray-700 font-bold mb-2">Difficulty</label>
        <input type="number" id="difficulty" name="difficulty" required="true" min="0" max="5" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div class="mb-4">
        <label for="tags" class="block text-gray-700 font-bold mb-2">Tags</label>
        <input type="text" id="tags" name="tags" required="true" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div class="mb-4">
        <label for="description" class="block text-gray-700 font-bold mb-2">Description</label>
        <textarea id="description" name="description" required="true" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
    </div>
    <div class="mb-4">
        <label for="pictures" class="block text-gray-700 font-bold mb-2">Picture(s)</label>
        <input type="file" multiple accept=".png, .jpg, .jpeg, .gif, .webp" id="pictures" name="pictures" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div class="mb-4">
        <label for="video" class="block text-gray-700 font-bold mb-2">Video</label>
        <input type="file" accept=".mp4, .webm, .ogg" id="video" name="video" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        <div id="video-preview" class="mt-2 hidden">
        </div>
    </div>
    <input type="file" name="videoThumbnail" id="videoThumbnail" class="hidden">
    <div class="mb-4">
        <label for="from" class="block text-gray-700 font-bold mb-2">From (not required)</label>
        <select id="from" name="from" required="false" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option value="{null}">none</option>
            {{#each tricks}}
                <option value="{{this.id}}">{{this.name}}</option>
            {{/each}}
        </select>
    </div>
    <div class="mb-4">
        <label for="to" class="block text-gray-700 font-bold mb-2">To (not required)</label>
        <select id="to" name="to" required="false" class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            {{#each tricks}} 
                <option value="{{this.id}}" {{#if (eq this._id ../to)}}selected{{/if}}>{{this.name}}</option>
            {{/each}}
        </select>
    </div>
    <div class="text-center">
        <button type="submit" class="px-4 py-2 bg-blue-500 text-white font-bold rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">Submit</button>
    </div>
</form>

<script>
    const videoThumbnailInput = document.getElementById('videoThumbnail');
    const videoInput = document.getElementById('video');
    const videoPreview = document.getElementById('video-preview');
    videoInput.addEventListener('change', function() {
        const file = this.files[0];
        if (file) {
            const url = URL.createObjectURL(file);
            
            videoPreview.innerHTML = `<canvas></canvas>`;
            const canvas = videoPreview.querySelector('canvas');
            const context = canvas.getContext('2d');
            const video = document.createElement('video');
            video.src = url;
            video.addEventListener('loadeddata', function() {
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                context.drawImage(video, 0, 0, canvas.width, canvas.height);
                
                const thumbnailUrl = canvas.toDataURL('image/png');
                videoThumbnailInput.setAttribute('src', thumbnailUrl);
                videoThumbnailInput.value(thumbnailUrl);
                videoPreview.innerHTML = `<img src="${thumbnailUrl}" alt="Video thumbnail" class="mt-4 rounded shadow-lg w-fit max-w-screen-sm md:max-w-full max-h-20 object-contain">`;
            });

            videoPreview.classList.remove('hidden');
        } else {
            videoPreview.classList.add('hidden');
            videoPreview.innerHTML = '';
            videoThumbnailInput.setAttribute('src', '');
        }
    });
</script>